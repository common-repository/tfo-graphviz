<?php
/**
 * tfo-graphviz-method.php
 *
 * @package tfo-graphviz
 *
 * TFO-Graphviz WordPress plugin
 * Copyright (C) 2010 Chris Luke <chrisy@flirble.org>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 */


// $Id: tfo-graphviz-method.php 2110733 2019-06-23 03:01:21Z chrisy $

class TFO_Graphviz_Method {
	var $dot;

	// shortcode attributes
	var $id, $lang, $simple, $output, $href;
	var $imap, $title, $width, $height, $size, $dpi;
	var $emitjs, $class;

	var $url;
	var $error;


	/**
	 * Constructor implementation.
	 *
	 * @param string  $dot  Type of Graphviz source.
	 * @param hash    $atts List of attributes for Graphviz generation.
	 */
	function __construct($dot, $atts) {
		$this->dot  = (string) $dot;
		foreach (array('id', 'lang', 'simple', 'output', 'href',
				'imap', 'title', 'width', 'height', 'size', 'dpi',
				'emitjs', 'class') as $att) {
			if (array_key_exists($att, $atts))
				$this->$att = $atts[$att];
		}
		$this->url = false;
	}


	/**
	 * Returns a hash of the contents of the current source file.
	 * Requires the file already be loaded into $this->dot and the
     * various shortcode arguments parsed.
	 *
	 * @return string The hash.
	 */
	function hash_file() {
		// Concatenate all the options for execution
		// Otherwise when they change we may not regenerate the output
		$data = sprintf("%s\n%%%d-%s-%s-%s-%s%%\n",
			$this->dot,
			$this->id,
			$this->imap,
			$this->lang,
			$this->size,
			$this->dpi);

		$hash = md5($data);
		return substr($hash, 0, 32);
	}


	/**
	 * Returns the current URL.
	 *
	 * @return string The current URL.
	 */
	function url() {
		return $this->url;
	}


	/**
	 * Does this method emit a URL?
	 * @return boolean
	 */
	function emits_url() {
		return false;
	}


	/**
	 * Inline content for the method.
	 *
	 * @return The inline content generated by this method.
	 */
	function inline() {
		return "";
	}


	/**
	 * Does this method emit a inline content?
	 * @return boolean
	 */
	function emits_inline() {
		return false;
	}

}


?>
